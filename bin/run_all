#!/bin/bash

open_sem() {
  mkfifo pipe-$$
  exec 3<>pipe-$$
  rm pipe-$$
  local i=$1
  for((;i>0;i--)); do
    printf %s 000 >&3
  done
}

run_with_lock() {
  local x
  # this read waits until there is something to read
  read -u 3 -n 3 x && ((0==x)) || exit $x
  (
   ( "$@"; )
  # push the return code of the command to the semaphore
  printf '%.3d' $? >&3
  )&
}

N=8
open_sem $N
if [ "$1" = "tcm" ]; then
  dir_type=*-fault
  echo "tcm"
else
  dir_type=*/
  echo "gzoltar"
fi
metrics=$($FLITSR_HOME/.venv/bin/python -m flitsr.get_metric_names)
#metrics="barinel"

for proj in *; do
  echo "Running $proj..."
  cd "$proj"
  for dir in $dir_type; do
    cd "$dir"
    echo "Doing $dir..."
    #if [ ! -f "results" ]; then
      if [ "$1" = "tcm" ]; then
        for file in *.txt; do
          run_with_lock flitsr "$file" all;
        done
      else
        for file in */; do run_with_lock flitsr "${file%/}" all; done
      fi
      wait
      for m in $metrics; do
        #for t in feed_rndm_; do
        #for t in ""; do
        for t in "" flitsr_ flitsr_multi_; do
          for file in $t${m}_*.txt; do
            orig=${file#"$t${m}_"}
            echo "$orig"
            cat "$file"; rm "$file";
            echo "--------------------------"
          done > "$t${m}.results"
        done
      done
      merge > results
      #echo "Done in $dir"
      #if [ $1 = "tcm" ]; then
        #merge rel > results_rel
      #fi
    #fi
    cd ../
  done
  echo "Done in $proj"
  cd ../
done
